<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
   <context:component-scan base-package="kr.ohora.www"></context:component-scan>
   
   <!-- p84 -->
   <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
     <!--    p102
     <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
     <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE"></property>
      -->      
     <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
     <property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"></property>
     <property name="username" value="scott"></property>
     <property name="password" value="tiger"></property> 
   </bean>
   
   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
     <constructor-arg ref="hikariConfig"></constructor-arg>
   </bean>
   
   <!-- p91 -->
   <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
     <property name="dataSource" ref="dataSource"></property>
     <property name="configLocation" value="classpath:kr/ohora/www/persistence/mybatis-config.xml"></property> 
   </bean>
      
   <!-- p95 -->
    <mybatis-spring:scan base-package="kr.ohora.www.persistence"/>
   
      
   <!-- PDF 488에 있는 JDBC template 객체  -->
   <!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   	<property name="dataSource" ref="dataSource"></property>
   </bean>    -->
   
   <bean id="namedParameterJdbcTemplate" 
      class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
    <constructor-arg ref="dataSource" />
	</bean>
      
   <!-- p508 스프링 트랜잭션을 처리할 JDBC기반의 트랜잭션 관리자 등록
    Spring JDBC 또는 mybatis DB처리 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     <property name="dataSource"  ref="dataSource" />
   </bean>
   
    <!--  p514 transaction template
   <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
     <property name="transactionManager"  ref="transactionManager" />
   </bean>
    -->
    
   <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

	  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		    <property name="host" value="smtp.gmail.com"/>
		    <property name="port" value="587"/>
		    <property name="username" value="발송자 이메일 넣기@gmail.com"/>
		    <property name="password" value="구글 앱 비밀번호 넣기"/>
		    <property name="javaMailProperties">
		        <props>
		            <prop key="mail.transport.protocol">smtp</prop>
		            <prop key="mail.smtp.auth">true</prop>
		            <prop key="mail.smtp.starttls.enable">true</prop> <!-- STARTTLS 활성화 -->
		            <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop> <!-- Gmail SSL 인증 신뢰 -->
		            <prop key="mail.debug">true</prop>
		        </props>
		    </property>
		</bean>


	</beans>

		
</beans>
